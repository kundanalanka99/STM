Add

1.	Creating Java Project
•	Click on File and select New project
•	Enter project name as com.vogella.Junit.Addition
•	Click on Next and then on Finish
2.	Creating java Test project
•	Right click on com.vogella.Junit.Addition
•	Click on properties and select tab build path
•	Click on source and click on Create New Folder
•	Give the folder name as Test and click on next
•	Click on Finish and then on OK
3.	Creating java class
•	Right click on com.vogella.Junit.Addition and click on New
•	Click on class and give class name as Add
•	Click on Finish
•	Type the following code

Add.java

package com.vogella.JUnit.Addition;

public class Add {

public int addNumbers(int a,int b)
{
int sum=a+b;
return sum;
}

}

4.	Create java test class
•	Right click on com.vogella.Junit.Addition and then click on new
•	Click on Junit test case
•	Change the name of folder src to test in source folder tab
•	Click on browse and select Add class and click on Next
•	Click on the Finish and then on OK
•	Add the following code

Add1.java

package com.vogella.JUnit.Addition;
import java.util.Arrays;
import java.util.Collection;

import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import static org.junit.Assert.*;

import org.junit.Test; @RunWith(Parameterized.class) public class Add1 {


private int expected,first,second;
public Add1(int expectedResult,int firstNumber,int secondNumber)
{
this.expected=expectedResult; this.first=firstNumber; this.second=secondNumber;
}
@Parameters
public static Collection<Integer[]> addedNumbers(){
return Arrays.asList(new Integer[][]{{10,6,4},{2,1,1},{6,3,3},{20,15,5},{13,9,4}});
}

@Test
public void test() {
Add a=new Add();
System.out.println("Addition with parameters :"+first+" and "+second);
assertEquals(expected,a.addNumbers(first,second));

}

}



Triangle


1.	Creating Java Project
•	Click on File and select New project
•	Enter project name as com.vogella.Junit.Triangle
•	Click on Next and then on Finish
2.	Creating java Test project
•	Right click on com.vogella.Junit. Triangle
•	Click on properties and select tab build path
•	Click on source and click on Create New Folder
•	Give the folder name as Test and click on next
•	Click on Finish and then on OK
3.	Creating java class
•	Right click on com.vogella.Junit. Triangle and click on New
•	Click on class and give class name as Triangle
•	Click on Finish
•	Type the following code

Triangle.java

package  com.vogella.JUnit.Triangle;
public class Triangle {
public  int  check(int  a,int  b,int  c)
{
if(a==b && b==c && a==c)
return 1;
else if(a==b || b==c || c==a)
return 2;
else
return 3;

}
}
  

4.	Create java test class
•	Right click on com.vogella.Junit.Triangle and then click on new
•	Click on Junit test case
•	Change the name of folder src to test in source folder tab
•	Click on browse and select Triangle1 class and click on Next
 
•	Click on the Finish and then on OK
•	Add the following code

Triangle1.java

package  com.vogella.JUnit.Triangle;

import  static  org.junit.Assert.*;
import java.util.Arrays;
import java.util.Collection;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class Triangle1 {

private  int  a; private  int  b; private int c; private int result;
public  Triangle1(int  res,int  a1,int  b1,int  c1)
{
this.result=res; this.a=a1; this.b=b1; this.c=c1;
}
@Parameters
public  static  Collection<Integer[]>  addNum()
{
return  Arrays.asList(new  Integer[][]{{1,2,2,2},{2,3,2,2},{3,1,2,3}});
}
@Test
public void test() {
Triangle  t=new  Triangle(); int  n=t.check(a,  b,  c); switch(n)
{
case  1:  System.out.println("It  is  Equilateral  triangle");
break;
case 2: System.out.println("It is Isosceles triangle");
break;
case 3: System.out.println("It is Scalene triangle");
break;
default:  System.out.println("It  is  not  a  valid  triangle");
break;
}
assertEquals(result,t.check(a,  b,c));
}

}
 



Prime

1.	Creating Java Project
•	Click on File and select New project
•	Enter project name as com.vogella.Junit.Prime
•	Click on Next and then on Finish
2.	Creating java Test project
•	Right click on com.vogella.Junit.Prime
•	Click on properties and select tab build path
•	Click on source and click on Create New Folder
•	Give the folder name as Test and click on next
•	Click on Finish and then on OK
3.	Creating java class
•	Right click on com.vogella.Junit.Prime and click on New
•	Click on class and give class name as Prime
•	Click on Finish
•	Type the following code

Prime.java

package com.vogella.JUnit.Prime;

public class Prime 
{
public int isPrime(int n)
{
	int c=0;
	for(int i=1;i<n;i=i+1)
	{
		if(n%i==0)
			c=c+1;
		if(c>1)
			return 0;
	}
	if(c==1)
		return 1;
	return 0;
}
}

4.Create java test class
•	Right click on com.vogella.JUnit.Prime and then click on new.
•	Click on JUnit test case
•	Change the name of folder src to test in source folder tab
•	Click on browse and select Prime class and click on Next 
•	Click on Finish and then on OK
•	Add the following code

Prime1.java
package com.vogella.JUnit.Prime;
import static org.junit.Assert.*;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Collection;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

@RunWith(Parameterized.class)
public class Prime1 {

	private int expected;
	private int first;
	public Prime1(int expectedResult,int first)
	{
		this.first=first;
		this.expected=expectedResult;
	}
	@Parameters
	public static Collection<Integer[]>PrimeNumber(){
		return Arrays.asList(new Integer[][]{{1,7},{1,4},{1,3}});
	}
	@Test
	public void testIsPrime() {
		Prime pr=new Prime();
		System.out.println("Prime with parameters:"+first);
		assertEquals(expected,pr.isPrime(first));
	}
}
